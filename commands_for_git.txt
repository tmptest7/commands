Компанды

git clone git@github.com:tmptest7/parser.git   # клонирует репозиторий parser пользователя temtest7 в текующию папку указанную в терминале

cd parser 	# для работы с репозиторием, нужно перейти в его папку

git branch 	 # показывает список веток, с которыми мы работаем в проекте, и выделяет текущую

git checkout -b имя-новой-ветки 	# создает новую ветку отличную от master 

git checkout master 	# переключается на ветку master

git branch -m старое-имя-ветки новое-имя-ветки 	# изменить название ветки

git status 	# покажет текущее состояние в вашей ветке, а именно список с названиями изменённых файлов

git add имя-файла 	# добавляет файл в набор изменений для коммита

git add -A 	# сохраняет все изменения разом

git commit -m "ваше сообщение" 	# зафиксировать все сохранённые изменения и дать им название # commit - совершить, фиксировать, помещать

git push origin название-текущей-ветки 	#  отправляет изменения (коммиты) в репозиторий на GitHub # где origin означает репозиторий, который был склонирован на компьютер, то есть ваш форк # Пр.: git push origin master


git pull origin cant-pull 	#вытаскивает в текущий локальный репозиторий, содержимое ветки cant-pull, котороая находится на GitHab'e # Origin - это наш репозиторий и cant-pull - это ремоут ветка 	#pull - вытащить # git pull origin master


# в файле .gitignore можно добавить файлы и папки, которые не будут добавляться в коммит # каждый файл с новой строки # После этого можно вызывать git add -A и git commit -m "ваше сообщение" и git push origin master

git diff 	# показывает разницу между версиями